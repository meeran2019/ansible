
---------------------------------------------------------------------------------------------------------

ansible-vault encrypt_string d3v3l0p3r
ansible-vault encrypt_string  adm$n$

- hosts: node00
  gather_facts: no
  vars:
    admin_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          64396331383031323064343432353935323334626437666531313633343232353936323738313337
          3436666266356534343934653132363866626231636663610a663731653135316132613831323463
          61663331626236303163306234353632643231353036323833373865346531306331613761356665
          3365653631656530310a626332643537333861653335643836646566323934653362333364386137
          3731
    developer_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38623734343634383937316566383161633337363939666335376238623133646364656134666433
          3364656161383062393166366336383262343233353464650a363234656536323165366337636666
          65653464613863653339666135373339333738303136663966633530383761363238383030653636
          6135656362313335390a343631633036376639366639386564333233343537616337393930666634
          3762
  tasks:
    - name: Include user.yml
      include_vars:
        file: data/users.yml
    - name: Creating admins
      user:
        name: "{{ item }}"
        password: "{{ admin_pass | string | password_hash('sha512') }}"
        groups: wheel
      with_items: "{{ admins | list }}"

    - debug: 
        msg: "{{ admins | list }}"

    - name: creating developers
      user:
        name: "{{ item }}"
        password: "{{ developer_pass | string | password_hash('sha512') }}"
        home: /var/www
      with_items: "{{ developers | list }}"

    - debug: 
        msg: "{{ developers | list }}"

---------------------------------------------------------------------------------------------------------

- hosts: node02
  vars:
    packages:
      - nginx
      - mariadb
  tasks:
    - name: start nginx and mariadb
      service:
        name: "{{ item }}"
        state: started
      loop: "{{ packages }}"
    - name: delete the files
      file:
        path: /usr/share/nginx/html/
        state: absent
    - name: create the directory
      file:
        path: /usr/share/nginx/html/
        state: directory
    - name: download zip archive
      unarchive:
        src: https://github.com/indercodes/ansible-1100-mock-nginx/raw/master/index.php.zip
        dest: /usr/share/nginx/html/
        remote_src: true
    - name: replace the module
      replace:
        path: /usr/share/nginx/html/index.php
        regexp: '{{ item.From }}'
        replace: '{{ item.To }}'
      with_items:
        - { From: '$database = "database";' , To: '$database = "mydb";' }
        - { From: '$username = "user";' , To: '$username = "myuser";' }
        - { From: '$password = "password";' , To: '$password = "mypassword";' }
    - name: restart nginx
      service:
        name: nginx
        state: restarted

---------------------------------------------------------------------------------------------------------

- hosts: node02
  gather_facts: yes
  tasks:
    - name: Create facts.txt
      blockinfile:
        path: /root/facts.txt
        create: yes
        block: |
          This is Ansible managed node {{ ansible_nodename }}
          IP address of host is {{ ansible_default_ipv4.address }}
          Its OS family is {{ ansible_os_family }}

    - name: Make index.html
      copy:
        src: /root/facts.txt
        remote_src: yes
        dest: /usr/share/nginx/html/index.html

---------------------------------------------------------------------------------------------------------

- hosts: all
  gather_facts: no
  tasks:
    - pip:
        name: awscli
        state: latest
        executable: pip3

---------------------------------------------------------------------------------------------------------

- hosts: all
  tasks:
    - name: install nginx
      yum:
        name: nginx
        state: latest
    - name: copy file from controller to remote
      copy:
        src: /home/thor/playbooks/index.html
        dest: /usr/share/nginx/html/index.html

---------------------------------------------------------------------------------------------------------

nameserver  {{  dns_server }};
options ndots:0

- hosts: storage_nodes
  tasks:
  - name: copy resolv.conf to nodes
    become: true
    template:
      src: /home/thor/playbooks/dns/templates/resolv.conf.j2
      dest: /tmp/resolv.conf

---------------------------------------------------------------------------------------------------------

- hosts: all
  tasks:
    - name: Install and configure httpd web server
      block:
        - yum:
            name: httpd
            state: latest
        - service:
            name: httpd
            state: started

---------------------------------------------------------------------------------------------------------

- hosts: node00
  tasks:
  - name: install firewalld
    yum:
      name: firewalld
      state: latest
  - name: start firewalld service
    service:
      name: firewalld
      state: started
      enabled: yes
  - name: whitelist node01 ip address
    firewalld:
      source: 172.20.1.101
      zone: internal
      permanent: true
      state: enabled
      immediate: yes

---------------------------------------------------------------------------------------------------------

The ssh_key_file is the path used by the option generate_ssh_key of user module. It's not the path of a local SSH key to upload to the remote user created.

- hosts: all
  tasks:
  - user:
      name: deploy
      state: present
  - authorized_key:
      user: deploy
      state: present
      key: "{{ lookup('file','~/playbooks/devops.pub') }}"

---------------------------------------------------------------------------------------------------------

hosts: all
  tasks:
    - package:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - make
        - autoconf
        - automake
        - protobuf-devel
        - libutempter-devel
        - ncurses-devel
        - openssl-devel
        - gcc
        - gcc-c++
    - git:
        repo: https://github.com/mobile-shell/mosh
        dest: /tmp/mosh
        force: yes
    - shell: ./autogen.sh && ./configure && make && make install
      args:
        chdir: /tmp/mosh

---------------------------------------------------------------------------------------------------------

