---------------------------------------------------------------------------------------------------------
ANSIBLE: 
---------------------------------------------------------------------------------------------------------

    It is configuration management system. 
    It is agentless.

    IDEMPOTENT - Result is always same if action perform repeately. 

    https://docs.ansible.com/


INSTALLATION: 

    https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html

---------------------------------------------------------------------------------------------------------
ANSIBLE CONCEPTS:
---------------------------------------------------------------------------------------------------------

ANSIBLE INVENTORY: 

    Ansible is agentless means no need to install software in target system.
    For Linux, uses SSH and for Windows, uses Powershell remoting. 

    Default inventory file is located in /etc/ansible/hosts file. 

    Inventory Parameters: 
        ansible_host        -   host name 
        ansible_connection  -   ssh for Linux / winrm for windows / localhost
        ansible_port        -   port number 
        ansible_user        -   root/administrator 
        ansible_ssh_pass    -   password for linux 
        ansible_password    -   password for windows

    File Structure: 

    alias-linux-name ansible_host=host-name ansible_connection=ssh ansible_user=root ansible_ssh_pass=Password
    
    alias-windows-name ansible_host=host-name ansible_connection=winrm ansible_user=administrator ansible_password=Password

    [group-name]                    # To group by using alias. 
    alias-name
    alias-name2

    [new-group-name:children]       # This is to create group by using group. 
    group-name1
    group-name2 
    
---------------------------------------------------------------------------------------------------------

PLAYBOOKS: 

    It is written in YAML format. 

    PLAY: It is set of activities (tasks).
        TASKS: An action to be performed on hosts. 
    
    Playbook  ->  Play (set of tasks) -> Tasks (actions)

    File structure: 

    Play is array/list and can have multiple play. 
    Task is array/list and can have multiple tasks under play. 
    For HOSTS, Only group-name should be used without children option in group of group name.

    -
        name: 'Name of the play'
        hosts: 'host-name which should be maintain in inventory-file. It can be groupname or alias'
        tasks: 
            -
                name: 'Name of the tasks 1'
                command: this is module name and corresponding execution.
            -
                name: 'Name of the tasks 2'
                command: this is module name and corresponding execution. 
                
---------------------------------------------------------------------------------------------------------    

ANSIBLE MODULES: 

    System      -   System level activities like restart, create new useretc. 
    Command     -   Execute the command / script. 
    Files       -   Works with file like copy, archive, compress etc. 
    Database    -   Works with database like mongodb etc. 
    Cloud       -   Works with cloud providers like aws etc. 
    Windows     -   Windows environment like win_copy etc. 

Command Module: 
    To execute the command in target system. 

Script Module: 
    Runs a script after transfer to target system and execute in remote system. 

Service Module: 
    Used to start, stop and restart services in target system. 
    state=Started  - If already running, no change. If not running, start the service. 

Lineinfile Module: 
    Search for a line in a file and replace it or add it if doesn't exists.
    
---------------------------------------------------------------------------------------------------------

ANSIBLE VARIABLES: 

    Stores information that varies with each host. 
    
    Declaration:

    1. Within playbook, 

        vars: 
          key1: value1 

    2. Within inventory file, 

        alias key1=value1 key2=value2

    3. Create separate variable.yaml file, 

        key1: value1
        key2: value2

    Reference: 
        '{{ key1 }}'

---------------------------------------------------------------------------------------------------------        





